whisk:
  ingress:
    name: ow-ingress
    apiHostName: ''
    apiHostPort: 31001
    apiHostProto: https
    type: NodePort
    annotations: null
    domain: domain
    tls:
      enabled: false
      secretenabled: false
      createsecret: false
      secretname: ow-ingress-tls-secret
      secrettype: type
      crt: crt
      key: key
  auth:
    system: >-
      789c46b1-71f6-4ed5-8c54-816aa4f8c502:abczO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP
    guest: >-
      23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP
  systemNameSpace: /whisk.system
  limits:
    actionsInvokesPerminute: 60
    actionsInvokesConcurrent: 30
    triggersFiresPerminute: 60
    actionsSequenceMaxlength: 50
    actions:
      time:
        min: 100ms
        max: 5m
        std: 1m
      memory:
        min: 128m
        max: 512m
        std: 256m
      concurrency:
        min: 1
        max: 1
        std: 1
      log:
        min: 0m
        max: 10m
        std: 10m
    activation:
      payload:
        max: '1048576'
  loadbalancer:
    blackboxFraction: 10%
    timeoutFactor: 2
  kafka:
    replicationFactor: ''
    topics:
      cacheInvalidation:
        segmentBytes: ''
        retentionBytes: ''
        retentionMs: ''
      completed:
        segmentBytes: ''
        retentionBytes: ''
        retentionMs: ''
      events:
        segmentBytes: ''
        retentionBytes: ''
        retentionMs: ''
      health:
        segmentBytes: ''
        retentionBytes: ''
        retentionMs: ''
      invoker:
        segmentBytes: ''
        retentionBytes: ''
        retentionMs: ''
  containerPool:
    userMemory: 2048m
  runtimes: runtimes.json
  testing:
    includeSystemTests: false
  versions:
    openwhisk:
      buildDate: '2018-12-13-03:18:39Z'
      buildNo: 20181213a
      gitTag: 9f66633aa930547b0ea7caa36d4c46d935d6224d
    openwhiskCli:
      tag: a596544
    openwhiskCatalog:
      gitTag: 3d6d69f3e2dba96c775d4b1a4d55b1fc158b1201
    openwhiskPackageAlarms:
      gitTag: 7693072f37d4ae215bf89bd721053b3cad341fec
    openwhiskPackageCloudant:
      gitTag: cc9f35151b7b471f74e7f032c1f3342168687ca2
    openwhiskPackageKafka:
      gitTag: 6dbafc49107567185ee3a55781c8b3144fad6f63
k8s:
  domain: cluster.local
  dns: kube-dns.kube-system
  persistence:
    enabled: true
    hasDefaultStorageClass: true
    explicitStorageClass: nil
utility:
  imageName: openwhisk/ow-utils
  imageTag: 9f66633
  imagePullPolicy: IfNotPresent
docker:
  registry:
    name: ''
    username: ''
    password: ''
  timezone: UTC
zookeeper:
  external: false
  name: zookeeper
  imageName: zookeeper
  imageTag: '3.4'
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  port: 2181
  serverPort: 2888
  leaderElectionPort: 3888
  persistence:
    pvcName: zookeeper-pvc
    size: 256Mi
  config:
    tickTime: 2000
    initLimit: 5
    syncLimit: 2
    dataDir: /data
    dataLogDir: /datalog
kafka:
  external: false
  name: kafka
  imageName: wurstmeister/kafka
  imageTag: 0.11.0.1
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  port: 9092
  persistence:
    pvcName: kafka-pvc
    size: 512Mi
db:
  external: false
  wipeAndInit: true
  name: couchdb
  imageName: apache/couchdb
  imageTag: '2.1'
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  host: nil
  port: 5984
  provider: CouchDB
  protocol: http
  auth:
    username: whisk_admin
    password: some_passw0rd
  dbPrefix: test_
  activationsTable: test_activations
  actionsTable: test_whisks
  authsTable: test_subjects
  persistence:
    pvcName: couchdb-pvc
    size: 2Gi
nginx:
  name: nginx
  imageName: nginx
  imageTag: '1.13'
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  httpPort: 80
  httpsPort: 443
  httpsNodePort: 31001
controller:
  name: controller
  imageName: openwhisk/controller
  imageTag: 9f66633
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  port: 8080
  options: ''
  jvmHeapMB: '1024'
  jvmOptions: ''
invoker:
  name: invoker
  imageName: openwhisk/invoker
  imageTag: 9f66633
  imagePullPolicy: IfNotPresent
  restartPolicy: Always
  port: 8080
  options: ''
  jvmHeapMB: '512'
  jvmOptions: ''
  containerFactory:
    dind: false
    useRunc: false
    impl: kubernetes
    kubernetes:
      replicaCount: 1
      agent:
        name: invoker-agent
        imageName: openwhisk/kube-invoker-agent
        imageTag: eb92751
        imagePullPolicy: IfNotPresent
        enabled: false
        port: 3233
    containerNetwork: bridge
    nameservers: ''
apigw:
  name: apigateway
  imageName: openwhisk/apigateway
  imageTag: bed6e65
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  apiPort: 9000
  mgmtPort: 8080
redis:
  name: redis
  imageName: redis
  imageTag: '4.0'
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  restartPolicy: Always
  port: 6379
  persistence:
    pvcName: redis-pvc
    size: 256Mi
providers:
  db:
    external: false
    host: 10.10.10.10
    port: 5984
    protocol: http
    username: admin
    password: secret
  alarm:
    enabled: false
    name: alarmprovider
    imageName: openwhisk/alarmprovider
    imageTag: 1.12.0
    imagePullPolicy: IfNotPresent
    replicaCount: 1
    restartPolicy: Always
    apiPort: 8080
    dbPrefix: alm
    persistence:
      pvcName: alarmprovider-pvc
      size: 1Gi
  kafka:
    enabled: false
    name: kafkaprovider
    imageName: openwhisk/kafkaprovider
    imageTag: 1.4.18
    imagePullPolicy: IfNotPresent
    replicaCount: 1
    restartPolicy: Always
    apiPort: 8080
    dbPrefix: kp
  cloudant:
    enabled: false
    name: cloudantprovider
    imageName: openwhisk/cloudantprovider
    imageTag: 1.9.0
    imagePullPolicy: IfNotPresent
    replicaCount: 1
    restartPolicy: Always
    apiPort: 8080
    dbPrefix: cldt
    persistence:
      pvcName: cloudntprovider-pvc
      size: 1Gi
affinity:
  enabled: true
  coreNodeLabel: core
  edgeNodeLabel: edge
  invokerNodeLabel: invoker
  providerNodeLabel: provider

